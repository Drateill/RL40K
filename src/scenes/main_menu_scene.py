"""
Sc√®ne du menu principal int√©gr√©e au syst√®me de sc√®nes
"""
import pygame
from .base_scene import BaseScene
from ..ui.scenes.main_menu import MainMenuScene

class MainMenuGameScene(BaseScene):
    """Sc√®ne de menu principal du jeu"""
    
    def __init__(self):
        super().__init__()
        self.menu = MainMenuScene()
        self.next_scene = None
        # Initialiser le syst√®me audio pour les param√®tres
        try:
            from ..systems.sound_system import create_sound_manager
            self.sound_system = create_sound_manager()
        except Exception as e:
            print(f"Erreur initialisation audio: {e}")
            self.sound_system = None
        
    def handle_event(self, event):
        """G√®re les √©v√©nements du menu"""
        if event.type == pygame.MOUSEBUTTONDOWN:
            print(f"üñ±Ô∏è MainMenuGameScene: MOUSEBUTTONDOWN re√ßu √† {event.pos}")
        self.menu.handle_event(event)
        
        # V√©rifier l'action s√©lectionn√©e
        action = self.menu.get_selected_action()
        if action:
            print(f"üé¨ MainMenuGameScene a re√ßu l'action: {action}")
        
        if action == "play":
            print("üöÄ Transition vers la s√©lection d'arch√©type")
            self.next_scene = "archetype_selection"  # Aller vers la s√©lection d'arch√©type
        elif action == "settings":
            self.next_scene = "settings"
        elif action == "quit":
            self.next_scene = "quit"
    
    def update(self, dt):
        """Met √† jour le menu"""
        self.menu.update(dt)
    
    def draw(self, screen):
        """Dessine le menu"""
        self.menu.draw(screen)
    
    def get_next_scene(self):
        """Retourne la prochaine sc√®ne √† afficher"""
        scene = self.next_scene
        self.next_scene = None
        return scene