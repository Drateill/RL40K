"""
Sc√®ne de base - Interface commune pour toutes les sc√®nes
D√©finit les m√©thodes que chaque sc√®ne doit impl√©menter
"""
import pygame

class BaseScene:
    """Classe de base pour toutes les sc√®nes du jeu"""
    
    def __init__(self):
        self.scene_manager = None  # R√©f√©rence vers le gestionnaire
        self.is_active = False
        self.is_paused = False
    
    def on_enter(self):
        """Appel√© quand la sc√®ne devient active"""
        self.is_active = True
        self.is_paused = False
        print(f"üé¨ Entr√©e dans {self.__class__.__name__}")
    
    def on_exit(self):
        """Appel√© quand la sc√®ne est quitt√©e"""
        self.is_active = False
        print(f"üö™ Sortie de {self.__class__.__name__}")
    
    def on_pause(self):
        """Appel√© quand la sc√®ne est mise en pause"""
        self.is_paused = True
        print(f"‚è∏Ô∏è Pause de {self.__class__.__name__}")
    
    def on_resume(self):
        """Appel√© quand la sc√®ne reprend apr√®s une pause"""
        self.is_paused = False
        print(f"‚ñ∂Ô∏è Reprise de {self.__class__.__name__}")
    
    def handle_event(self, event):
        """G√®re les √©v√©nements pygame"""
        # Les classes filles doivent surcharger cette m√©thode
        pass
    
    def update(self, dt):
        """Met √† jour la logique de la sc√®ne"""
        # Les classes filles doivent surcharger cette m√©thode
        pass
    
    def draw(self, screen):
        """Dessine la sc√®ne √† l'√©cran"""
        # Les classes filles doivent surcharger cette m√©thode
        pass
    
    def cleanup(self):
        """Nettoie les ressources de la sc√®ne"""
        # M√©thode optionnelle pour lib√©rer des ressources
        pass
    
    def switch_to_scene(self, scene_name):
        """Utilitaire pour changer de sc√®ne"""
        if self.scene_manager:
            self.scene_manager.set_active_scene(scene_name)
        else:
            print("‚ùå Aucun gestionnaire de sc√®ne disponible")
    
    def push_scene(self, scene_name):
        """Utilitaire pour empiler une sc√®ne"""
        if self.scene_manager:
            self.scene_manager.push_scene(scene_name)
        else:
            print("‚ùå Aucun gestionnaire de sc√®ne disponible")
    
    def pop_scene(self):
        """Utilitaire pour d√©piler la sc√®ne courante"""
        if self.scene_manager:
            self.scene_manager.pop_scene()
        else:
            print("‚ùå Aucun gestionnaire de sc√®ne disponible")